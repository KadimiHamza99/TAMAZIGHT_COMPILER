
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEADERYIS ARU ASEKKIT AZAYEZ DIVIDE EQUALS FLOAT GHER ILAW INT MA MA_ULAC MINUS MULTIPLY NAME PLUS SEHVIVER STRING TAGGAYT TIMMAD TUKKEST T_TIDETT USLIG\n    statement : var_assign\n            | empty\n    \n    var_assign : NAME EQUALS expression\n    \n    expression :  expression MULTIPLY expression\n                | expression DIVIDE expression\n                | expression MINUS expression\n                | expression PLUS expression\n    \n    expression : INT \n                | FLOAT\n    \n    expression : STRING\n    \n    expression : NAME\n    \n    empty :\n    '
    
_lr_action_items = {'NAME':([0,5,11,12,13,14,],[4,6,6,6,6,6,]),'$end':([0,1,2,3,6,7,8,9,10,15,16,17,18,],[-12,0,-1,-2,-11,-3,-8,-9,-10,-4,-5,-6,-7,]),'EQUALS':([4,],[5,]),'INT':([5,11,12,13,14,],[8,8,8,8,8,]),'FLOAT':([5,11,12,13,14,],[9,9,9,9,9,]),'STRING':([5,11,12,13,14,],[10,10,10,10,10,]),'MULTIPLY':([6,7,8,9,10,15,16,17,18,],[-11,11,-8,-9,-10,-4,-5,11,11,]),'DIVIDE':([6,7,8,9,10,15,16,17,18,],[-11,12,-8,-9,-10,-4,-5,12,12,]),'MINUS':([6,7,8,9,10,15,16,17,18,],[-11,13,-8,-9,-10,-4,-5,-6,-7,]),'PLUS':([6,7,8,9,10,15,16,17,18,],[-11,14,-8,-9,-10,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'var_assign':([0,],[2,]),'empty':([0,],[3,]),'expression':([5,11,12,13,14,],[7,15,16,17,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> var_assign','statement',1,'p_statement','TamazightLexerParser.py',255),
  ('statement -> empty','statement',1,'p_statement','TamazightLexerParser.py',256),
  ('var_assign -> NAME EQUALS expression','var_assign',3,'p_varAssign','TamazightLexerParser.py',262),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','TamazightLexerParser.py',269),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','TamazightLexerParser.py',270),
  ('expression -> expression MINUS expression','expression',3,'p_expression','TamazightLexerParser.py',271),
  ('expression -> expression PLUS expression','expression',3,'p_expression','TamazightLexerParser.py',272),
  ('expression -> INT','expression',1,'p_expression_int_float','TamazightLexerParser.py',278),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','TamazightLexerParser.py',279),
  ('expression -> STRING','expression',1,'p_expression_string','TamazightLexerParser.py',285),
  ('expression -> NAME','expression',1,'p_expression_var','TamazightLexerParser.py',290),
  ('empty -> <empty>','empty',0,'p_empty','TamazightLexerParser.py',296),
]
